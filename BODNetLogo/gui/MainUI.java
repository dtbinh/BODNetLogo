package gui;


import java.io.File;
import javax.swing.JFileChooser;

import utils.logging.Log;
import utils.tuples.TupleFour;

import main.BODNetLogo;

/*
 * This is part of the BODNetLogo program which integrates BOD with NetLogo,
 * please see the README files for this directory for more information
 * Michael Brooks
 */

/*
 * This code was originally auto generated by the NETBEANS IDE, gui creator.
 * The auto generator code only covers the positioning and specification of the GUI elements
 * The functionality of each element was later added manually
 */


@SuppressWarnings("serial")
public class MainUI extends javax.swing.JFrame {

	@SuppressWarnings("unchecked")
	public TupleFour<String[], Integer, String, String[]>[] agents = new TupleFour[0] ;

	String [] agentNames;
	
	
    @SuppressWarnings({ "unchecked" })                     
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        nLogoFileAddress = new javax.swing.JTextField();
        nLogoFileAddressBrowseButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfBreeds = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        listOfBreedsAddButton = new javax.swing.JButton();
        listOfBreedsEditButton = new javax.swing.JButton();
        listOfBreedsRemoveButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        runSetupCheckBox = new javax.swing.JCheckBox();
        runSetupCheckBox.setSelected(true);
        ticksOnCheckBox = new javax.swing.JCheckBox();
        ticksOnCheckBox.setSelected(true);
        debugModeCheckBox = new javax.swing.JCheckBox();
        autoDeathCheckBox = new javax.swing.JCheckBox();
        autoDeathCheckBox.setSelected(true);
        showInfoCheckBox = new javax.swing.JCheckBox();
        showInfoCheckBox.setSelected(true);
        showErrorCheckBox = new javax.swing.JCheckBox();
        showErrorCheckBox.setSelected(true);
        showDebugCheckBox = new javax.swing.JCheckBox();
        saveInfoCheckBox = new javax.swing.JCheckBox();
        saveErrorCheckBox = new javax.swing.JCheckBox();
        saveDebugCheckBox = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        resetButton = new javax.swing.JButton();
        loadSimulationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(50, 50, 50));
        setMaximumSize(new java.awt.Dimension(400, 560));
        setMinimumSize(new java.awt.Dimension(400, 560));
        setPreferredSize(new java.awt.Dimension(400, 580));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setMaximumSize(new java.awt.Dimension(560, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(560, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 560));

        nLogoFileAddress.setToolTipText("Enter the full address path for the .nlogo file for your simulation");

        nLogoFileAddressBrowseButton.setText("Browse");
        nLogoFileAddressBrowseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nLogoFileAddressBrowseButtonMouseClicked(evt);
            }
        });

        jLabel1.setText("Choose NetLogo Simulation File");

        listOfBreeds.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Add simulation breeds" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listOfBreeds.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listOfBreeds.setToolTipText("The breeds in your simulation, note every turtle defined in your netlogo simulation MUST be defined here, although the qty may be set to 0.");
        jScrollPane1.setViewportView(listOfBreeds);

        jLabel2.setText("Breeds");

        listOfBreedsAddButton.setText("Add New");
        listOfBreedsAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfBreedsAddButtonActionPerformed(evt);
            }
        });

        listOfBreedsEditButton.setText("Edit");
        listOfBreedsEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfBreedsEditButtonActionPerformed(evt);
            }
        });

        listOfBreedsRemoveButton.setText("Remove");
        listOfBreedsRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfBreedsRemoveButtonActionPerformed(evt);
            }
        });

        runSetupCheckBox.setText("Run Setup");
        runSetupCheckBox.setToolTipText("Run the 'setup' function when loading the simulation");

        ticksOnCheckBox.setText("Ticks On");
        ticksOnCheckBox.setToolTipText("Record each complete set of turtle moves with a 'tick' on netlogo");

        debugModeCheckBox.setText("Debug Mode");
        debugModeCheckBox.setToolTipText("Run in 'debug' mode, this will add a 1 sec delay after turtle's move");

        autoDeathCheckBox.setText("Auto Death");
        autoDeathCheckBox.setToolTipText("Automatically tell the turtle to die (remove it from the netlogo simulation) once it reaches it's drivecollection condition");

        showInfoCheckBox.setText("Show Info Output");
        showInfoCheckBox.setToolTipText("Show the 'info' text output for the simulation");

        showErrorCheckBox.setText("Show Error Output");
        showErrorCheckBox.setToolTipText("Show the 'Error' text output for the simulation");

        showDebugCheckBox.setText("Show Debug Output");
        showDebugCheckBox.setToolTipText("Show the 'debug' text output for the simulation");

        saveInfoCheckBox.setText("Save Info Output Log");
        saveInfoCheckBox.setToolTipText("Save the info output in a file, 'output.log' in the same directory as the .nlogo file");

        saveErrorCheckBox.setText("Save Error Output Log");
        saveErrorCheckBox.setToolTipText("Save the error output in a file, 'errorOutput.log' in the same directory as the .nlogo file");

        saveDebugCheckBox.setText("Save Debug Output Log");
        saveDebugCheckBox.setToolTipText("Save the debug output in a file, 'debugOutput.log' in the same directory as the .nlogo file");

        resetButton.setText("Reset");
        resetButton.setToolTipText("Reset all the values in this configuration to default values");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        loadSimulationButton.setText("Load Simulation");
        loadSimulationButton.setToolTipText("Load the Netlogo simulation, note this will not start it running");
        loadSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSimulationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(nLogoFileAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nLogoFileAddressBrowseButton))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(listOfBreedsAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listOfBreedsEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listOfBreedsRemoveButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(runSetupCheckBox)
                            .addComponent(ticksOnCheckBox)
                            .addComponent(debugModeCheckBox)
                            .addComponent(autoDeathCheckBox))
                        .addGap(105, 105, 105)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveInfoCheckBox)
                            .addComponent(showDebugCheckBox)
                            .addComponent(showErrorCheckBox)
                            .addComponent(showInfoCheckBox)
                            .addComponent(saveErrorCheckBox)
                            .addComponent(saveDebugCheckBox)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(loadSimulationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nLogoFileAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nLogoFileAddressBrowseButton))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listOfBreedsAddButton)
                    .addComponent(listOfBreedsEditButton)
                    .addComponent(listOfBreedsRemoveButton))
                .addGap(37, 37, 37)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showInfoCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runSetupCheckBox)
                    .addComponent(showErrorCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ticksOnCheckBox)
                    .addComponent(showDebugCheckBox))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(debugModeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(autoDeathCheckBox))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(saveInfoCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveErrorCheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveDebugCheckBox)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadSimulationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void nLogoFileAddressBrowseButtonMouseClicked(java.awt.event.MouseEvent evt) {                                                          
        System.out.println("here");
        int returnVal = jFileChooser1.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = jFileChooser1.getSelectedFile();
        nLogoFileAddress.setText(file.getAbsolutePath());
    }

        
    }                                                         

    @SuppressWarnings("unchecked")
	private void listOfBreedsAddButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        AddAgent add = new AddAgent(this, listOfBreeds);
        add.setVisible(true);
        
        
    }                                                     

    @SuppressWarnings("unchecked")
	private void listOfBreedsEditButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        AddAgent add = new AddAgent(this, listOfBreeds, listOfBreeds.getSelectedIndex());
        add.setVisible(true);
    }                                                      

    @SuppressWarnings("unchecked")
	private void listOfBreedsRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) { 
    	int remove = listOfBreeds.getSelectedIndex();
    	TupleFour<String[], Integer, String, String[]>[] agentsTemp = new TupleFour[0];
    	//remove is set to -1 if no value is selected
    	if (remove == -1)	{
    		return;
    	}
    	//base case
    	if (agents.length < 1)	{
    		//do nothing
    	}	else	{
    		//other case
    		//set the size of temp
    		agentsTemp = new TupleFour[agents.length-1];
    		//less than the remove index keep the values
    		for (int i = 0; i < remove; i ++)	{
    			agentsTemp[i] = agents[i];
    		}
    		//more than the remove index set all values to index-1
    		for (int i = remove; i < agentsTemp.length; i ++)	{
    			
    			agentsTemp[i] = agents[i+1];
    		
    		}
        	agents = agentsTemp;
    	}
    	refreshBreedList();
    	
    	
    }                                                        

    
    @SuppressWarnings({ "unchecked" })
	public void refreshBreedList()	{
    	if (agents.length == 0 || agents == null)	{
    		//reset the model
        	listOfBreeds.setModel(new javax.swing.AbstractListModel<String>() {
                String[] strings = new String[] {"Add simulation breeds"};
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });
    	}	else	{
    		agentNames = new String[agents.length];
    		for (int i = 0; i < agentNames.length; i ++)	{
    			agentNames[i] = agents[i].First[1];
    		}
    		//reset the model
        	listOfBreeds.setModel(new javax.swing.AbstractListModel<String>() {
                String[] strings = agentNames;
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });
    	}
    }
    
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	//reset all values
    	System.out.println("Resetting");
    	jPanel1.setVisible(false);
    	jPanel1.removeAll();
    	initComponents();
    	jPanel1.repaint();
    	jPanel1.revalidate();
    	jPanel1.setVisible(true);
    }                                           

    private void loadSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {   
    	BODNetLogo.nLogoModel = nLogoFileAddress.getText();
    	BODNetLogo.RUNSETUP = runSetupCheckBox.isSelected();
    	BODNetLogo.TICKSON = ticksOnCheckBox.isSelected();
    	BODNetLogo.DEBUGMODE = debugModeCheckBox.isSelected();
    	BODNetLogo.AUTODEATH = autoDeathCheckBox.isSelected();
    	BODNetLogo.waitingForConfigInfo = false;
    	BODNetLogo.agents = agents;
    	Log.showInfo = showInfoCheckBox.isSelected();
    	Log.showError = showErrorCheckBox.isSelected();
    	Log.showDebug = showDebugCheckBox.isSelected();
    	
    }                                                    

    
    
    
    public MainUI() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        initComponents();
        
        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });*/
    }
    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox autoDeathCheckBox;
    private javax.swing.JCheckBox debugModeCheckBox;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    @SuppressWarnings("rawtypes")
	private javax.swing.JList listOfBreeds;
    private javax.swing.JButton listOfBreedsAddButton;
    private javax.swing.JButton listOfBreedsEditButton;
    private javax.swing.JButton listOfBreedsRemoveButton;
    private javax.swing.JButton loadSimulationButton;
    private javax.swing.JTextField nLogoFileAddress;
    private javax.swing.JButton nLogoFileAddressBrowseButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JCheckBox runSetupCheckBox;
    private javax.swing.JCheckBox saveDebugCheckBox;
    private javax.swing.JCheckBox saveErrorCheckBox;
    private javax.swing.JCheckBox saveInfoCheckBox;
    private javax.swing.JCheckBox showDebugCheckBox;
    private javax.swing.JCheckBox showErrorCheckBox;
    private javax.swing.JCheckBox showInfoCheckBox;
    private javax.swing.JCheckBox ticksOnCheckBox;
    // End of variables declaration                   


	public void setValues(
			TupleFour<String[], Integer, String, String[]>[] agents,
			String nLogoModel, boolean RUNSETUP, boolean TICKSON,
			boolean DEBUGMODE, boolean AUTODEATH) {
		this.agents = agents;
		nLogoFileAddress.setText(nLogoModel);
		runSetupCheckBox.setSelected(RUNSETUP);
		ticksOnCheckBox.setSelected(TICKSON);
		debugModeCheckBox.setSelected(DEBUGMODE);
		autoDeathCheckBox.setSelected(AUTODEATH);
    	refreshBreedList();
		
	}
}
